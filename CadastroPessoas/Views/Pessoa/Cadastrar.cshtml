
@{
    ViewBag.Title = "Cadastrar";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string dataAtual = string.Format("{0:yyyy-MM-dd}", DateTime.Now.AddDays(1));
    string dataAtualFormatoBrasileiro = string.Format("{0:dd/MM/yyyy}", DateTime.Now);
}



@section Scripts {
    <script src="~/Scripts/vue-the-mask.js"></script>
    <script src="~/Scripts/vee-validate.js"></script>
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/promise.js"></script> 
     <script>
        Vue.use(VueTheMask);
        Vue.use(VeeValidate, {
            classes: true,
            classNames: {
                valid: 'is-valid',
                invalid: 'is-invalid'
            },

            dictionary: {                                                                                    /*esta tag dictionary serve para alterar a msg no campo desejado , neste caso está sendo utilizado no campo da data*/
                en: {
                    messages: {
                        required: 'Campo obrigatório',
                        date_format: 'Data inválida',
                        date_between: 'A data precisa estar entre 01/01/1990 até @dataAtualFormatoBrasileiro. '
                    }
                }
            }
        });

        function ValidarCPF(strCPF) {
            var Soma;
            var Resto;
            Soma = 0;
            strCPF = strCPF.replace(/[^0-9]/g, '');                                                   /* esta função >> .replace(/[^\d.-]/g, '') << serve  para retirar os caracteres especiais. chama-se de expressão regular , e existem outros modelos*/
            if (strCPF == "00000000000" || strCPF == "11111111111" || strCPF == "22222222222" ||
                strCPF == "33333333333" || strCPF == "44444444444" || strCPF == "55555555555" ||
                strCPF == "66666666666" || strCPF == "77777777777" || strCPF == "88888888888" ||
                strCPF == "99999999999") return false;

            for (i = 1; i <= 9; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);
            Resto = (Soma * 10) % 11;

            if ((Resto == 10) || (Resto == 11)) Resto = 0;
            if (Resto != parseInt(strCPF.substring(9, 10))) return false;

            Soma = 0;
            for (i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);
            Resto = (Soma * 10) % 11;

            if ((Resto == 10) || (Resto == 11)) Resto = 0;
            if (Resto != parseInt(strCPF.substring(10, 11))) return false;
            return true;
        }

        function verificarCpfJaCadastrado(cpfDigitado) {
            return new Promise(function (resolve) {
                axios.get('/api/pessoa/verificar-cpf-ja-cadastrado', { params: { cpf: cpfDigitado } }).then(function (resposta) {
                    resolve({
                        valid: !resposta.data.resultado,
                        data: 'CPF já cadastrado'
                    });
                }).catch(function () {
                    resolve({
                        valid: false,
                        data: 'Erro ao validar CPF'
                    });
                });
            });
        }
     
        new Vue({
            el: '#formCadastroPessoas',
            data: {
                pessoa: {}
            },
            created: function () {
                this.$validator.extend('validar-cpf', {                /*adiciona uma validação customizada dentro do vee validade */
                    getMessage: 'CPF inválido',
                    validate: function (value) {
                        return ValidarCPF(value);
                    }
                });

                this.$validator.extend('varificar-cpf-ja-cadastrado', {
                    getMessage: function (campo, params, data) {
                        return data;
                    },
                    validate: verificarCpfJaCadastrado
                });
            },
            methods: {
                salvar: function (event) {                                                    /*validação do VeeValidate para conferir se não tem nenhum campo inválido*/
                    this.$validator.validateAll().then(function (valido) {               /*validateAll irá validar todos os campos do formulario*/
                        if (valido) {
                            event.target.submit();
                            return;
                        }
                    });                     
                }
            }
        })



    </script>
}

<h2>Cadastrar</h2>

@if (ViewBag.mensagemSucesso != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewBag.mensagemSucesso
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div id="formCadastroPessoas">
    <form method="post" action="/Pessoa/CadastrarPost" v-on:submit.prevent="salvar(event)">
        <div class="row g-3">
            <div class="col-md-4">
                <label for="Nome">Nome: <span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="Nome" name="Nome" maxlength="200">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-2">
                <label for="CPF">CPF: <span>*</span> </label>
                <input type="text" v-validate="'required|validar-cpf|varificar-cpf-ja-cadastrado'" class="form-control" id="CPF" name="CPF" v-mask="'###.###.###-##'">
                <div class="invalid-feedback">
                    {{ errors.first("CPF") }}
                </div>
            </div>

            <div class="col-md-2">
                <label for="DataNascimento">Data de Nascimento: <span>*</span></label>
                <input type="date" class="form-control" id="DataNascimento" name="DataNascimento" v-model="pessoa.DataNascimento"
                       v-validate="'required|date_format:yyyy-MM-dd|date_between:1900-01-01,@dataAtual'">
                <div class="invalid-feedback">
                    {{ errors.first("DataNascimento") }}
                </div>

            </div>

            <div class="col-md-2">
                <label for="EstadoCivil">Estado Cívil: <span>*</span></label>
                <select class="form-select" v-validate="'required'" id="EstadoCivil" name="EstadoCivil" maxlength="20">
                    <option selected value="">Selecione uma opção...</option>
                    <option>Solteiro(a)</option>
                    <option>Casado(a)</option>
                    <option>Divorciado(a)</option>
                    <option>Viúvo(a)</option>
                </select>
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>

            </div>

            <div class="col-md-2
                 ">
                <label>Sexo: <span>*</span></label>
                <div class="form-check">
                    <input type="radio" v-validate="'required'" class="form-check-input" id="SexoMasculino" name="Sexo" value="M">
                    <label for="SexoMasculino">Masculino</label>

                </div>
                <div class="form-check">
                    <label for="SexoFeminino">Feminino</label>
                    <input type="radio" class="form-check-input" id="SexoFeminino" name="Sexo" value="F">
                </div>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-md-2">
                <label for="CEP">CEP: <span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="CEP" name="CEP" v-mask="'#####-###'">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-6">
                <label for="Endereco">Endereço: <span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="Endereco" name="Endereco" maxlength="100">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-1">
                <label for="Numero">Número:<span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="Numero" name="Numero" maxlength="10">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-1">
                <label for="Complemento">Complemento:</label>
                <input type="text" class="form-control" id="Complemento" name="Complemento" maxlength="30">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-md-6">
                <label for="Bairro">Bairro:<span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="Bairro" name="Bairro" maxlength="50">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-3">
                <label for="Cidade">Cidade:<span>*</span></label>
                <input type="text" v-validate="'required'" class="form-control" id="Cidade" name="Cidade" maxlength="50">
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-2">
                <label for="UF"> UF:<span>*</span></label>
                <select class="form-select" v-validate="'required'" id="UF" name="UF">
                    <option selected value="">Selecione seu Estado</option>
                    <option value="AC">Acre</option>
                    <option value="AL">Alagoas</option>
                    <option value="AP">Amapá</option>
                    <option value="AM">Amazonas</option>
                    <option value="BA">Bahia</option>
                    <option value="CE">Ceará</option>
                    <option value="DF">Distrito Federal</option>
                    <option value="ES">Espírito Santo</option>
                    <option value="GO">Goiás</option>
                    <option value="MA">Maranhão</option>
                    <option value="MT">Mato Grosso</option>
                    <option value="MS">Mato Grosso do Sul</option>
                    <option value="MG">Minas Gerais</option>
                    <option value="PA">Pará</option>
                    <option value="PB">Paraíba</option>
                    <option value="PR">Paraná</option>
                    <option value="PE">Pernambuco</option>
                    <option value="PI">Piauí</option>
                    <option value="RJ">Rio de Janeiro</option>
                    <option value="RN">Rio Grande do Norte</option>
                    <option value="RS">Rio Grande do Sul</option>
                    <option value="RO">Rondônia</option>
                    <option value="RR">Roraima</option>
                    <option value="SC">Santa Catarina</option>
                    <option value="SP">São Paulo</option>
                    <option value="SE">Sergipe</option>
                    <option value="TO">Tocantins</option>
                </select>
                <div class="invalid-feedback">
                    Campo obrigatório.
                </div>
            </div>

            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <a href="/Pessoa/Listar" class="btn btn-light">Voltar</a>
            </div>
        </div>
    </form>
</div>